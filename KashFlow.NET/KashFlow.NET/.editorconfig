# Rules in this file were initially inferred by Visual Studio IntelliCode from the C:\Users\edfar\source\repos\situ-admin\Source\ClassLibrary\ codebase based on best match to current usage at 08/11/2018
# You can modify the rules from these initially generated values to suit your own policies
# You can learn more about editorconfig here: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference
[*.cs]

#Naming Conventions (most to least specific)

#camelCase for methods
dotnet_naming_rule.parameters_must_be_camel_case.symbols = parameter_camel_case_symbols
dotnet_naming_symbols.parameter_camel_case_symbols.applicable_kinds = parameter
dotnet_naming_symbols.parameter_camel_case_symbols.applicable_accessibilities = *
dotnet_naming_rule.parameters_must_be_camel_case.style = parameter_camel_case_style
dotnet_naming_style.parameter_camel_case_style.capitalization = camel_case
dotnet_naming_rule.parameters_must_be_camel_case.severity = error

dotnet_naming_rule.properties_must_be_pascal_case.symbols = properties_pascal_case_symbols
dotnet_naming_symbols.properties_pascal_case_symbols.applicable_kinds = property
dotnet_naming_symbols.properties_pascal_case_symbols.applicable_accessibilities = *
dotnet_naming_rule.properties_pascal_case_symbols.style = properties_pascal_case_style
dotnet_naming_style.properties_pascal_case_style.capitalization = pascal_case
dotnet_naming_rule.properties_pascal_case_symbols.severity = error

dotnet_naming_rule.method_must_be_pascal_case.symbols = method_pascal_case_symbols
dotnet_naming_symbols.method_pascal_case_symbols.applicable_kinds = method
dotnet_naming_symbols.method_pascal_case_symbols.applicable_accessibilities = *
dotnet_naming_rule.method_must_be_pascal_case.style = method_pascal_case_style
dotnet_naming_style.method_pascal_case_style.capitalization = pascal_case
dotnet_naming_rule.method_must_be_pascal_case.severity = error

#Core editorconfig formatting - indentation

#use soft tabs (spaces) for indentation
indent_style = tab

#Formatting - indentation options

#indent switch case contents.
csharp_indent_case_contents = true
#csharp_indent_case_contents_when_block
csharp_indent_case_contents_when_block = true
#indent switch labels
csharp_indent_switch_labels = true

#Formatting - new line options

#place catch statements on a new line
csharp_new_line_before_catch = true
#place else statements on a new line
csharp_new_line_before_else = true
#require braces to be on a new line for properties, object_collection, types, control_blocks, methods, and accessors (also known as "Allman" style)
csharp_new_line_before_open_brace = properties, object_collection, types, control_blocks, methods, accessors

#Formatting - organize using options

#do not place System.* using directives before other using directives
dotnet_sort_system_directives_first = false

#Formatting - spacing options

#require NO space between a cast and the value
csharp_space_after_cast = false
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_after_colon_in_inheritance_clause = true
#require a space after a keyword in a control flow statement such as a for loop
csharp_space_after_keywords_in_control_flow_statements = true
#require a space before the colon for bases or interfaces in a type declaration
csharp_space_before_colon_in_inheritance_clause = true
#remove space within empty argument list parentheses
csharp_space_between_method_call_empty_parameter_list_parentheses = false
#remove space between method call name and opening parenthesis
csharp_space_between_method_call_name_and_opening_parenthesis = false
#do not place space characters after the opening parenthesis and before the closing parenthesis of a method call
csharp_space_between_method_call_parameter_list_parentheses = false
#remove space within empty parameter list parentheses for a method declaration
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
#place a space character after the opening parenthesis and before the closing parenthesis of a method declaration parameter list.
csharp_space_between_method_declaration_parameter_list_parentheses = false

#Formatting - wrapping options

#leave code block on single line
csharp_preserve_single_line_blocks = true

#Style - expression bodied member options

#prefer block bodies for accessors
csharp_style_expression_bodied_accessors = true:suggestion
#prefer block bodies for constructors
csharp_style_expression_bodied_constructors = false:suggestion
#prefer block bodies for methods
csharp_style_expression_bodied_methods = false:suggestion
#prefer block bodies for properties
csharp_style_expression_bodied_properties = true:suggestion

#Style - expression level options

#prefer out variables to be declared before the method call
csharp_style_inlined_variable_declaration = false:suggestion
#prefer the language keyword for member access expressions, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_member_access = true:error

#Style - implicit and explicit types

#prefer var is used to declare variables with built-in system types such as int
csharp_style_var_for_built_in_types = true:warning
#prefer var when the type is already mentioned on the right-hand side of a declaration expression
csharp_style_var_when_type_is_apparent = true:warning
#prefer var over explicit type in all cases, unless overridden by another code style rule.
csharp_style_var_elsewhere= true:warning

#Style - language keyword and framework type options

#prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_locals_parameters_members = true:error

#Style - qualification options

#prefer fields not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_field = false:suggestion
#prefer methods not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_method = false:suggestion
#prefer properties not to be prefaced with this. or Me. in Visual Basic
dotnet_style_qualification_for_property = false:suggestion